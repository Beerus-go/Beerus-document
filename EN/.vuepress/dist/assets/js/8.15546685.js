(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{395:function(t,s,n){"use strict";n.r(s);var a=n(54),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"beerus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beerus"}},[t._v("#")]),t._v(" Beerus")]),t._v(" "),n("h2",{attrs:{id:"installing-dependencies"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installing-dependencies"}},[t._v("#")]),t._v(" Installing dependencies")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("go get github.com/yuyenews/Beerus@v1.1.6\n")])])]),n("h2",{attrs:{id:"the-underlying-technology-used"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#the-underlying-technology-used"}},[t._v("#")]),t._v(" The underlying technology used")]),t._v(" "),n("ul",[n("li",[t._v("http uses the net/http package that comes with go, and extends the way routes are managed on top of it.")]),t._v(" "),n("li",[t._v("WebSocket is an extension of http, the framework itself implements the protocol upgrade, message listening, message parsing, message sending and other functions")]),t._v(" "),n("li",[t._v("udp is developed based on the net package, with a simple secondary wrapper")])]),t._v(" "),n("p",[t._v("In addition to the underlying technologies described above, there are many other extensions, which you can learn about by reading the documentation below")]),t._v(" "),n("h2",{attrs:{id:"http-service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-service"}},[t._v("#")]),t._v(" HTTP Service")]),t._v(" "),n("h3",{attrs:{id:"create-route"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create-route"}},[t._v("#")]),t._v(" Create Route")]),t._v(" "),n("ul",[n("li",[t._v("Simply call the functions below the route, choosing the most appropriate function for the type of request you need")]),t._v(" "),n("li",[t._v("The first parameter is the URL of the route, which is the address requested by the front-end")]),t._v(" "),n("li",[t._v("The second parameter is a function that will be automatically executed by the server when the front-end requests this URL")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateRoute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// post route example")]),t._v("\n    route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("POST")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example/post"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeResponse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n        res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendJson")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`{"msg":"SUCCESS"}`')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get route example")]),t._v("\n    route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example/get"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeResponse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n        res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendJson")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`{"msg":"SUCCESS"}`')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"using-the-traditional-way-of-getting-parameters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-the-traditional-way-of-getting-parameters"}},[t._v("#")]),t._v(" Using the traditional way of getting parameters")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the parameters from the front end, regardless of the request method")]),t._v("\nreq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("FormValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"param name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get multiple parameters with the same name, return an array, only works for x-www-form-urlencoded, GET requests, FormData can only get one value")]),t._v("\nreq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("FormValues")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"param name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the request header from the front end, regardless of the request method")]),t._v("\nreq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("HeaderValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"header name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the file from the front-end, form-data only")]),t._v("\nreq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"param name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the json string passed as json")]),t._v("\nreq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Json\n")])])]),n("h3",{attrs:{id:"extract-parameters-directly-to-struct"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#extract-parameters-directly-to-struct"}},[t._v("#")]),t._v(" Extract parameters directly to struct")]),t._v(" "),n("p",[t._v("First, you need to define a struct, The matching rules are as follows")]),t._v(" "),n("ul",[n("li",[t._v("If the field attribute is set in the tag, it will be matched against the field first, if not then it will be matched against the field name again.")]),t._v(" "),n("li",[t._v("The supported types are shown in the following examples")]),t._v(" "),n("li",[t._v("commons.BeeFile type Only works on formdata")]),t._v(" "),n("li",[t._v("[]string Only available for x-www-form-urlencoded, JSON, GET requests, FormData can only get one value.")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DemoParam If you have a struct like this, and you want to put all the parameters from the request into this struct")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" DemoParam "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You can customize any field")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the name of the field must be exactly the same as the name of the requested parameter, and is case-sensitive")]),t._v("\n\tTestStringReception    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`field:"testStringReception"`')]),t._v("\n\tTestIntReception       "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`field:"testIntReception"`')]),t._v("\n\tTestInt64Reception     "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("   \n\tTestUintReception      "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("    \n\tTestUint32Reception    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v("  \n\tTestUint64Reception    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("  \n\tTestFloatReception     "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v(" \n\tTestStringRegReception "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  \n\tTestBoolReception      "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n\n\tTestBeeFileReception   commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeFile\n\n\tTestReception "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Then, use this struct as a parameter to the routing function")]),t._v(" "),n("ul",[n("li",[t._v("The number of parameters of the routing function is unlimited, you can set only one struct or multiple structs, or you can mix them with request and response as in the example")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note the first parameter")]),t._v("\nroute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("POST")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example/post"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param DemoParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeResponse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestStringReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestIntReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestInt64Reception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestFloatReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestUintReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestUint64Reception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestBoolReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//print(param.TestBeeFileReception.FileHeader.Filename)")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//print(": ")')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//println(param.TestBeeFileReception.FileHeader.Size)")]),t._v("\n\n\tres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendJson")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`{"msg":"hello word"}`')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Can also be extracted manually, call the params.ToStruct function to extract all the parameters from req to struct")]),t._v(" "),n("ul",[n("li",[t._v("The first argument is req")]),t._v(" "),n("li",[t._v("the second argument is a pointer to struct")]),t._v(" "),n("li",[t._v("The third argument is the value of struct")])]),t._v(" "),n("p",[t._v("When the params.ToStruct function is finished, there will be data in param")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("param "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" DemoParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Extraction parameters, Generally used in scenarios where verification is not required or you want to verify manually")]),t._v("\nparams"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ToStruct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"launching-services"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#launching-services"}},[t._v("#")]),t._v(" Launching services")]),t._v(" "),n("p",[t._v("You need to call the route creation function manually")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Interceptors, routes, etc. Loading of data requires its own calls")]),t._v("\n    routes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateRoute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Listen the service and listen to port 8080")]),t._v("\n    beerus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenHTTP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Once the service is started, it can be accessed normally, by http://ip:port/routePath")]),t._v(" "),n("h3",{attrs:{id:"parameter-validation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#parameter-validation"}},[t._v("#")]),t._v(" Parameter validation")]),t._v(" "),n("p",[t._v("To achieve automatic parameter validation, the parameters must first be extracted to struct, and the validation method is simple, see the following example")]),t._v(" "),n("ul",[n("li",[t._v("notnull: Set to true to indicate that this parameter must not be empty")]),t._v(" "),n("li",[t._v("reg: Write your own regular expression that fails to validate when it does not match.")]),t._v(" "),n("li",[t._v("max: Maximum value of the field")]),t._v(" "),n("li",[t._v("min: Minimum value of the field")]),t._v(" "),n("li",[t._v("msg: The message returned when the verification does not pass")]),t._v(" "),n("li",[t._v("notnull, reg valid only for string, max, min valid only for numeric fields")]),t._v(" "),n("li",[t._v("routes: Used to set which routes this validation is valid for, multiple comma-separated, supports * wildcards")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" DemoParam "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You can customize any field")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the name of the field must be exactly the same as the name of the requested parameter, and is case-sensitive")]),t._v("\n\tTestStringReception    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`notnull:"true" msg:"TestStringReception Cannot be empty" routes:"/example/put"`')]),t._v("\n\tTestIntReception       "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`max:"123" min:"32" msg:"TestIntReception The value range must be between 32 - 123" routes:"/example/post"`')]),t._v("\n\tTestInt64Reception     "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`max:"123" min:"32" msg:"TestInt64Reception The value range must be between 32 - 123"`')]),t._v("\n\tTestUintReception      "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`max:"123" min:"32" msg:"TestUintReception The value range must be between 32 - 123"`')]),t._v("\n\tTestUint32Reception    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`max:"123" min:"32" msg:"TTestUint32Reception The value range must be between 32 - 123"`')]),t._v("\n\tTestUint64Reception    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`max:"123" min:"32" msg:"TestUint64Reception The value range must be between 32 - 123"`')]),t._v("\n\tTestFloatReception     "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`max:"123" min:"32" msg:"TestFloatReception The value range must be between 32 - 123"`')]),t._v("\n\tTestStringRegReception "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('`reg:"^[a-z]+$" msg:"TestStringRegReception Does not meet the regular"`')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("For the above configuration to take effect, one more thing must be done, see the following example and pay attention to the comments")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Call the params.Validation function and perform validation")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Validation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When the return is not SUCCESS, it means that the authentication did not pass")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SUCCESS "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendErrorMsg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1128")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"returning-data-to-the-client"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#returning-data-to-the-client"}},[t._v("#")]),t._v(" Returning data to the client")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return json to client")]),t._v("\nres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendJson")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"json"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return text to client")]),t._v("\nres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return html to client")]),t._v("\nres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendHtml")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"html text"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returning files to the client")]),t._v("\nres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filename"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return other custom content-type data to the client")]),t._v("\nres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"json-mode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#json-mode"}},[t._v("#")]),t._v(" JSON mode")]),t._v(" "),n("ul",[n("li",[t._v("When JSON mode is enabled, the back-end will only respond to the front-end with data in json format, which is enabled as follows")]),t._v(" "),n("li",[t._v("It is actually on by default, but can be turned off if not needed, by setting it to false")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("JsonMode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),n("p",[t._v("Routing in JSON mode")]),t._v(" "),n("ul",[n("li",[t._v("The parameter rules are exactly the same as for non-JSON modes")]),t._v(" "),n("li",[t._v("But the routing function must have a return value, the return value type supports: struct, map, array, here for demonstration purposes we use map, actually support three")]),t._v(" "),n("li",[t._v("beerus will automatically convert the return value into a json response to the front end")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("POST")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example/post"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param DemoParam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeResponse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestStringReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestIntReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestInt64Reception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestFloatReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestUintReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestUint64Reception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestBoolReception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tmsg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tmsg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msg"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" msg\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("JSON mode, if you want to implement a file download function")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Example of file download")]),t._v("\nroute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GET")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/downLoad/file"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeResponse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ioutil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReadFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/Users/yeyu/Downloads/goland-2021.2.4.dmg"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Writing files to the client")]),t._v("\n\tres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goland.dmg"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Just return this constant")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" web"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Download\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("There is another exciting aspect of the JSON model")]),t._v(" "),n("ul",[n("li",[t._v("You don't need to validate the parameters manually, you just need to add a validation tag to the field of the struct that receives the parameters and beerus will automatically validate it for you.")]),t._v(" "),n("li",[t._v("If the validation does not pass, a json message will be returned to the front-end")])]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1128")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"msg"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The msg you set in the validation tag"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"interceptors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#interceptors"}},[t._v("#")]),t._v(" Interceptors")]),t._v(" "),n("ul",[n("li",[t._v("Creating an interceptor is particularly similar to creating a route, just call the route.AddInterceptor function")]),t._v(" "),n("li",[t._v("The first parameter is the path of the route to be intercepted and supports * wildcards")]),t._v(" "),n("li",[t._v("The second parameter is a function that implements the interceptor logic")]),t._v(" "),n("li",[t._v("If it is allowed, it returns SUCCESS, otherwise it returns a prompt message")]),t._v(" "),n("li",[t._v("As with the route, the CreateInterceptor function needs to be called in the main function")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This function needs to be called in the main function")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateInterceptor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\troute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddInterceptor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example/*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" loginInterceptorBefore"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loginInterceptorBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeRequest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeResponse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello word"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"word2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tlog"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exec interceptor"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SUCCESS\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"session-management"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#session-management"}},[t._v("#")]),t._v(" Session management")]),t._v(" "),n("p",[t._v("You need to create a session first")]),t._v(" "),n("ul",[n("li",[t._v("Secret: encryption key, length must be = 32")]),t._v(" "),n("li",[t._v("InitializationVector: initialization constant, length must be = 16")]),t._v(" "),n("li",[t._v("Timeout: duration of the session, in milliseconds")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("session "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("commons"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BeeSession"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsession"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Secret "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12345678abcdefgh09876543alnkdjfh"')]),t._v("\nsession"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InitializationVector "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12345678qwertyui"')]),t._v("\nsession"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Timeout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n")])])]),n("p",[t._v("Then you can use the session to create a token")]),t._v(" "),n("ul",[n("li",[t._v("Give the token to the front-end, which will bring it back with each request")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("demo "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" Demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Beerus"')]),t._v("\ndemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\ndemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),t._v("\n\ntoken"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" session"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateToken")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Restore the token to its original data")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[t._v("demo2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" Demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nerr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("RestoreToken")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("token"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("demo2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("RouterLink",{attrs:{to:"/beerus/session.html"}},[t._v("Details")])],1),t._v(" "),n("h2",{attrs:{id:"websocket-service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#websocket-service"}},[t._v("#")]),t._v(" WebSocket Service")]),t._v(" "),n("h3",{attrs:{id:"create-route-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create-route-2"}},[t._v("#")]),t._v(" Create route")]),t._v(" "),n("ul",[n("li",[t._v("Only three functions are used here, in practice it is possible to use three different functions for each route")]),t._v(" "),n("li",[t._v("The first parameter session: there are just two elements in it, an ID and a SendString, Send function")]),t._v(" "),n("li",[t._v("The second parameter msg: is the message sent by the client, which can be used directly")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CreateWebSocketRoute Creating websocket routes")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateWebSocketRoute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\twroute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddWebSocketRoute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ws/test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onConnection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onMessage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onClose"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\twroute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddWebSocketRoute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ws/test2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onConnection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onMessage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onClose"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In order to save time, only three functions are used below. In practice, you can configure a set of functions for each route")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onConnection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("wparams"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WebSocketSession"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-------------------------------"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tsession"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"connection success"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onMessage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("wparams"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WebSocketSession"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-------------------------------"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tsession"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SendString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I got the message."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClose")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("wparams"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WebSocketSession"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-------------------------------"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"launching-services-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#launching-services-2"}},[t._v("#")]),t._v(" Launching services")]),t._v(" "),n("p",[t._v("You need to call the route creation function manually, the service started is still an HTTP service")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Interceptors, routes, etc. Loading of data requires its own calls")]),t._v("\n    routes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateWebSocketRoute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Listen the service and listen to port 8080")]),t._v("\n    beerus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenHTTP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Once started, you can launch WebSocket communication normally, with the connection method: ws://ip:port/route path")]),t._v(" "),n("h2",{attrs:{id:"udp-service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#udp-service"}},[t._v("#")]),t._v(" UDP Service")]),t._v(" "),n("h3",{attrs:{id:"launching-services-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#launching-services-3"}},[t._v("#")]),t._v(" Launching services")]),t._v(" "),n("ul",[n("li",[t._v("There is no concept of routing, only a function to receive data")]),t._v(" "),n("li",[t._v("The first parameter is the handler")]),t._v(" "),n("li",[t._v("The second parameter is the data separator")]),t._v(" "),n("li",[t._v("The third parameter is the port")])]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Listening to a UDP service")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The first parameter is the handler")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The second parameter is the data separator")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The third parameter is the port")]),t._v("\n\tbeerus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenUDP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updHandler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"|"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updHandler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data is the data you received")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("util"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BytesToString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Once the data is received, it can be converted directly to string")]),t._v(" "),n("h2",{attrs:{id:"database-operations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#database-operations"}},[t._v("#")]),t._v(" Database operations")]),t._v(" "),n("p",[n("RouterLink",{attrs:{to:"/beerusdb/index.html"}},[t._v("Click here -> Database operations")])],1)])}),[],!1,null,null,null);s.default=e.exports}}]);